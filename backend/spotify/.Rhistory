library(readr)
tips <- read_csv("~/F3B_ISA/Data mining/tips.csv")
View(tips)
str(tips)
library(readr)
tips <- read_csv("~/F3B_ISA/Data mining/tips.csv")
View(tips)
summary(tips)
tips$tiprate = tips$tip / tips$totbill
hist(tips$day)
hist(tips$day, breaks = 2)
hist(tips$day, breaks = 4)
hist(tips$day, breaks = 5)
hist(tips$day, col='blue')
hist(tips$day, col='blue', main='Day Distribution', xlab = 'Day of the week')
hist(tips$day, col='blue', main='Day Distribution', xlab = 'Day of the week', freq = True)
hist(tips$day, col='blue', main='Day Distribution', xlab = 'Day of the week', freq = TRUE)
plot(tips$totbill, tips$tip)
plot(tips$totbill, tips$tip, main='Tips', xlab = 'Total Bill', ylab = 'Tip')
cor.test(tips$totbill, tips$tip)
boxplot(tips$totbill, main='Total Bill Distribution')
boxplot(tips$totbill, tips$tip, main='Total Bill Distribution')
boxplot(tips$totbill, tips$tip, tips$tip~tips$day, main='Total Bill Distribution')
boxplot(tip~day, data=tips, main='Total Bill Distribution')
boxplot(tip~day, data=tips, main='Tips distribution  per day')
boxplot(tips$totbill, tips$tip, main='Total Bill Distribution')
b1 = boxplot(tips$totbill, tips$tip, main='Total Bill Distribution')
b2 = boxplot(tip~day, data=tips, main='Tips distribution  per day')
b1 + b2
b1
plot(b1)
b1 = boxplot(tips$totbill, tips$tip, main='Total Bill Distribution')
b1 = boxplot(tips$totbill, tips$tip, main='Total Bill Distribution', x = c('Total bill', 'Tip'))
b1 = boxplot(tips$totbill, tips$tip, main='Total Bill Distribution', names = c('Total bill', 'Tip'))
b2 = boxplot(tip~day, data=tips, main='Tips distribution  per day', names=c('Thursday', 'Friday', 'Saturday', 'Sunday'))
b1 = boxplot(tips$totbill, tips$tip, tip~day, data=tips, main='Total Bill Distribution', names = c('Total bill', 'Tip'))
b1 = boxplot(tip~day, data=tips, tips$totbill, main='Total Bill Distribution', names = c('Total bill', 'Tip'))
b1 = boxplot(tip~day, data=tips, tips$totbill, main='Total Bill Distribution')
b1 = boxplot(tips, main='Total Bill Distribution')
hist(tips)
hist(tips$tip)
library(readr)
dat <- read_csv("C:/Users/i327247/Downloads/Berkeley.csv")
View(dat)
males = dat[wich(Gender=='Male'),]
males = dat[which(Gender=='Male'),]
males = dat[which(dat$Gender=='Male'),]
females = dat[which(dat$Gender=='Female'),]
sum(males$Freq)
total = sum(dat$Freq)
help(prop.test)
smokers  <- c( 83, 90, 129, 70 )
patients <- c( 86, 93, 136, 82 )
prop.test(smokers, patients)
admited_males = males[which(males$Admit=='Admitted'),]
admited_females = females[which(females$Admit=='Rejected'),]
admited_females = females[which(females$Admit=='Admitted'),]
admit = c(sum(admited_males$Freq), sum(admited_females$Freq))
students = c(sum(males$Freq), sum(females$Freq))
prop.test(admit, students)
source('C:/Users/i327247/Desktop/test.R', echo=TRUE)
females = dat[which(dat$Gender=='Female' & females$Dept=='A'),]
source('C:/Users/i327247/Desktop/test.R', echo=TRUE)
source('C:/Users/i327247/Desktop/test.R', echo=TRUE)
source('C:/Users/i327247/Desktop/test.R', echo=TRUE)
source('C:/Users/i327247/Desktop/test.R', echo=TRUE)
source('C:/Users/i327247/Desktop/test.R', echo=TRUE)
source('C:/Users/i327247/Desktop/test.R', echo=TRUE)
source('C:/Users/i327247/Desktop/test.R', echo=TRUE)
install.packages(ade4)
install.packages("ade4")
library("ade4")
library("factoextra")
install.packages("factoextra")
library("factoextra")
library(readr)
features <- read_csv("~/2Sigma/features_asset_450.csv",
col_types = cols(X1 = col_skip()))
View(features)
help("dudi.pca")
dudi.pca(features, center=TRUE, scale = TRUE, scannf = TRUE, nf = 2)
res.pca = dudi.pca(features, center=TRUE, scale = TRUE, scannf = TRUE, nf = 2)
summary(res.pca)
eig.val = get_eigenvalue(res.pca)
head(eig.val)
screeplot(res.pca, main ="Screeplot - Eigenvalues")
screeplot(res.pca, main ="Screeplot - Eigenvalues")
res.pca = dudi.pca(features, center=TRUE, scale = TRUE, scannf = TRUE, nf = 5)
summary(res.pca)
eig.val = get_eigenvalue(res.pca)
screeplot(res.pca, main ="Screeplot - Eigenvalues")
barplot(eig.val[, 2], names.arg=1:nrow(eig.val),
main = "Variances",
xlab = "Principal Components",
ylab = "Percentage of variances",
col ="steelblue")
# Add connected line segments to the plot
lines(x = 1:nrow(eig.val), eig.val[, 2],
type="b", pch=19, col = "red")
fviz_screeplot(res.pca, ncp=10)
head(res.pca$co)
feat_ext <- res.pca$co
feat_ext[order(feat_ext$Comp1),]
feat_ext[order(feat_ext$Comp1), decreasing=TRUE]
feat_ext[order(feat_ext$Comp1, decreasing = T),]
feat_ext[order(feat_ext$Comp1,feat_ext$Comp2, decreasing = T),]
cor(x=features$y, features)
result ^= cor(x=features$y, features)
result = cor(x=features$y, features)
View(result)
result.T
t(result)
result = t(result)
result[order(result$V1, decreasing = T)]
result[order(result$V1, decreasing = T),]
result[order(decreasing = T),]
names(result) = "corr"
View(result)
View(result)
head(result)
colnames(result) <- c("corr")
result
result = cor(x=features$y, features)
tt = t(result)
View(tt)
View(tt)
head(tt)
colnames(tt)
colnames(tt) <- "correlation"
colnames(tt)
tt
tt[order(tt$correlation, decreasing = T)]
tt[order(tt$correlation, decreasing = T),]
View(tt)
df = data.frame(tt)
df
df[order(decreasing = T)]
head(df[order(decreasing = T)])
head(df[order(df, decreasing = T)])
head(df[order(df$correlation, decreasing = T)])
View(df)
df[order(df$correlation, decreasing = T),]
df = df[order(df$correlation, decreasing = T),]
df = data.frame(tt)
attach(df)
newd = df[order(correlation),]
newd
View(tt)
View(tt)
summary(tt)
tt.index
tt
tt[0]
tt[1]
tt[0] = 'pdpd'
View(tt)
View(tt)
result = t(cor(x=features$y, features))
View(result)
help(cor)
result = t(cor(x=features$y, features, method = "kendall"))
View(result)
View(result)
result = t(cor(x=features$y, features, method = "spearman"))
View(result)
View(result)
result = t(cor(x=features$y, features))
View(result)
result = t(cor(x=features$y, features))
result = t(cor(x=features$y, features, method = "spearman"))
View(result)
result = t(cor(x=features$y, features, method = "pearson"))
result$y
result[1]
result
result.sort
help(sort)
sort(result, decreasing = T)
result
result = sort(result, decreasing = T)
result = t(cor(x=features$y, features, method = "pearson"))
colnames(result) = a
colnames(result) = 'a'
View(result)
result$a
index(results)
results.index
result['a']
result["a"]
is.matrix(result)
result[, 1]
result[, "a"]
result = result[, "a"]
result = t(cor(x=features$y, features, method = "pearson"))
View(result)
result = abs(t(cor(x=features$y, features, method = "pearson")))
View(result)
setwd("~/Muse")
source('~/F3B_ISA/Yelp/PCA.R')
source('~/F3B_ISA/Yelp/PCA.R')
